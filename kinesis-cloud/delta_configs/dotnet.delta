using Confluent.Kafka;

var producerConfig = new Dictionary<string, object>
{
    { "bootstrap.servers", "pkc-4k32l.us-east-1.aws.stag.cpdev.cloud:9092" },
    { "broker.version.fallback", "0.10.0.0" },
    { "api.version.fallback.ms", 0 },
    { "sasl.mechanisms", "PLAIN" },
    { "security.protocol", "SASL_SSL" },
    { "sasl.username", "L2DW7AQ5IUKSCZYO" },
    { "sasl.password", "eaJt3ET81Xaw1hO+pFXSXx1G0oaGDkhje3aJNAazP/12D0Qotn8AxoqQBqxnDgVH" },
    // { "ssl.ca.location", "/usr/local/etc/openssl/cert.pem" }, // varies by distro
    { “plugin.library.paths”, “monitoring-interceptor”},
    // .... additional configuration settings
};

var consumerConfig = new Dictionary<string, object>
{
    { "bootstrap.servers", "pkc-4k32l.us-east-1.aws.stag.cpdev.cloud:9092" },
    { "broker.version.fallback", "0.10.0.0" },
    { "api.version.fallback.ms", 0 },
    { "sasl.mechanisms", "PLAIN" },
    { "security.protocol", "SASL_SSL" },
    { "sasl.username", "L2DW7AQ5IUKSCZYO" },
    { "sasl.password", "eaJt3ET81Xaw1hO+pFXSXx1G0oaGDkhje3aJNAazP/12D0Qotn8AxoqQBqxnDgVH" },
    // { "ssl.ca.location", "/usr/local/etc/openssl/cert.pem" }, // varies by distro
    { “plugin.library.paths”, “monitoring-interceptor”},
    // .... additional configuration settings
};
